//KC03O8EA JOB ,'SAM PIECZ',MSGCLASS=H
//STEP1 EXEC PGM=ASSIST
//STEPLIB DD DSN=KC02293.ASSIST.LOADLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
***************************************************
* ASSIGNMENT SEVEN
*
* NAME: SAMUEL PIECZ
*
* CSECT: MAIN
*
* REGISTER USAGE:
* R1                                   Parameter list for subroutine
* R2                                   Not used
* R3                                   Not used
* R4                                   Not used
* R5                                   Not used
* R6                                   Not used
* R7                                   Not used
* R8                                   Not used
* R9                                   Not used
* R10                                  Not used
* R11                                  Not used
* R12                                  Use for linkage
* R13                                  Use for linkage
* R14                                  Using for branching BALR
* R15                                  Using for branching BALR
*
***************************************************
*
***< BUILD DSECT >
*
BLABL    DSECT                         Name to refer to DSECT
NAME     DS    13C                     Name is 13 characters
SYMBOL   DS    3C                      Symbol is 3 characters
NUMBER   DS    PL2                     Number is 2 packed length
DATE     DS    7C                      Date is 7 characters
*
***< MAIN >
*
MAIN     CSECT
*
***< ENTRY LINKAGE>
*
         STM   14,12,12(13)            Another situation where I think
         LR    12,15                   you should understand that
         USING MAIN,12                 I already know what this does.
         LA    14,MAINSAVE             The linkage code allows you to
         ST    14,8(0,13)              break code down intosubroutines
         ST    13,4(0,14)
         LR    13,14
*
***< START LOGIC >
*
         LA    1,BPARMS                Load build parameters into R1
         L     15,=V(BUILD)            Load subroutine into R15
         BALR  14,15                   Branch to build subroutine
         LA    1,PPARMS                Load print parameters into R1
         L     15,=V(PRINT)            Load print subroutine into R15
         BALR  14,15                   Branch to print subroutine
         LA    1,SPARMS                Load sort parameters into R1
         L     15,=V(SORT)             Load sort subroutine into R15
         BALR  14,15                   Branch to print subroutine
         LA    1,PPARMS2               Load print parameters 2  into R1
         L     15,=V(PRINT)            Load print subroutine into R15
         BALR  14,15                   Branch to print subroutine
*
***< EXIT LINKAGE >
*
         L     13,4(0,13)              Exit linkage code. Never
         LM    14,12,12(13)            changes. Switches control
         BR    14                      back to main for more subrtnes.
*
***< MAIN LTORGS>
*
         LTORG
         DS    0D
TABLE    DC    3000C' '                Table for storage
EOT      DS    F                       End of table
BPARMS   DC    A(TABLE)                Address for table
         DC    A(EOT)                  Address for end of table
PPARMS   DC    A(TABLE)                Address for TABLE
         DC    A(EOT)                  Address for EOT
         DC    A(HEAD1)                Address for location of header
PPARMS2  DC    A(TABLE)                Address for TABLE
         DC    A(EOT)                  Address for EOT
         DC    A(HEAD2)                Address for location of header
SPARMS   DC    A(TABLE)                Address for TABLE
         DC    A(EOT)                  Address for EOT
HEAD1    DC    CL50'1                   Chronological List of Elements'
         DC    CL19'           Page    '
HEAD2    DC    CL50'1                 Elements Sorted by Atomic Number'
         DC    CL19'          Page '
*
***< RESTORE REGISTERS >
*
MAINSAVE DS    18F                     Restore registers.
***************************************************
*
* CSECT: BUILD
*
* REGISTER USAGE:
* R1                                   Reserved for TRT
* R2                                   Reserved for TRT
* R3
* R4
* R5
* R6
* R7                                   Holds Table's address
* R8                                   Holds EOT's address
* R9                                   Location of current itemin file
* R10
* R11
* R12
* R13
* R14
* R15
*
***************************************************
*
***< BUILD SUBROUTINE >
*
BUILD    CSECT
*
***< ENTRY LINKAGE>
*
         STM   14,12,12(13)            Yes, fascinating, here we
         LR    12,15                   see a wild subroutine entry
         USING BUILD,12                linkage in it's natural
         USING BLABL,2                 habitat. It is even using
         LA    14,BSAVE                the dsect of build labels
         ST    13,4(0,14)              defined before main. This
         ST    14,8(0,13)              will allows me to reference
         LR    13,14                   things more easily. No offsets.
*
***< START LOGIC>
*
         LM    7,8,0(1)                Load EOT & TABLE into R7 & R8
         USING BLABL,7                 Allow use of BUILD DSECT
POPULATE DS    0H                      Start data population loop
         XREAD BUFFER,80               Read in data
         BL    FEND                    If no more GOTO end of find
         LA    1,BUFFER                Load BUFFER into R1
FIND     DS    0H                      Start find loop
*
***< Get Name >
*
         TRT   0(80,1),FINDTAB         Find next space
         BZ    POPULATE                If not GOTO find end
         LR    3,1                     Save space before element
         TRT   0(80,1),ASPACE          Search for the next blank space
         LR    4,1                     Save space after element
         SR    4,3                     Get length inbetween two spaces
         BCTR  4,0                     Take one away from space diff
         EX    4,XNAME                 Execute MVC of NAME
         TR    NAME(13),LOWER          Make NAME lowercase
         TR    NAME(1),UPPER           Make first letter uppercase
*
***< Get Symbol >
*
         TRT   0(80,1),FINDTAB         Find next space
         BZ    POPULATE                If not GOTO find end
         LR    3,1                     Save space before element
         TRT   0(80,1),ASPACE          Search for the next blank space
         LR    4,1                     Save space after element
         SR    4,3                     Get length inbetween two spaces
         BCTR  4,0                     Take one away from space diff
         EX    4,XSYMBOL               Execute MVC of Symbol
         TR    SYMBOL(3),LOWER         Make Symbol lowercase
         TR    SYMBOL(1),UPPER         Make first letter uppercase
*
***< Get Number>
*
         TRT   0(80,1),FINDTAB         Find next space
         BZ    POPULATE                If not GOTO find end
         LR    3,1                     Save space before element
         TRT   0(80,1),ASPACE          Search for the next blank space
         LR    4,1                     Save space after element
         SR    4,3                     Get length inbetween two spaces
         BCTR  4,0                     Take one away from space diff
         EX    4,XNUMBER               Execute MVC of NUMBER
*
***< Get Date >
*
         TRT   0(80,1),FINDTAB         Find next space
         BZ    POPULATE                If not GOTO find end
         LR    3,1                     Save space before element
         TRT   0(80,1),ASPACE          Search for the next blank space
         LR    4,1                     Save space after element
         SR    4,3                     Get length inbetween two spaces
         BCTR  4,0                     Take one away from space diff
         EX    4,XDATE                 Execute MVC of DATE
         TR    DATE(7),LOWER           Make DATE lowercase
*
***< End of loop >
*
         LA    7,25(0,7)               Increment table address
         BC    B'1111',POPULATE        End of loop grab more data
FEND     DS    0H
         ST    7,0(0,8)                Store end of table
*
***< EXIT LINKAGE >
*
         L     13,4(0,13)              The elusive exit linkage.
         LM    14,12,12(13)            Do not disturb it as it is
         BR    14                      sleeping. Anyone read these?
*
***< LTORG FOR BUILD>
*
         LTORG                         Define variables with LTORG
BUFFER   DC    80C' '                  Buffer for input data
         DC    C'*'                    Delimiter for end of buffer
XNAME    MVC   NAME(0),0(3)            Label to MVC NAME for EX
XSYMBOL  MVC   SYMBOL(0),0(3)          Label to MVC SYMBOL for EX
XNUMBER  PACK  NUMBER(2),0(0,3)        Label to MVC NUMBER for EX
XDATE    MVC   DATE(0),0(3)            Label to MVC DATE for EX
*
***< Search table for numeric and alphanumeric characters >
*
FINDTAB  DC    256X'00'
         ORG   FINDTAB+C'A'
         DC    9X'01'
         ORG
         ORG   FINDTAB+C'J'
         DC    9X'01'
         ORG
         ORG   FINDTAB+C'S'
         DC    8X'01'
         ORG
         ORG   FINDTAB+C'a'
         DC    9X'01'
         ORG
         ORG   FINDTAB+C'j'
         DC    9X'01'
         ORG
         ORG   FINDTAB+C's'
         DC    9X'01'
         ORG
         ORG   FINDTAB+C'0'
         DC    10X'01'
         ORG
*
***< Search table for spaces >
*
ASPACE   DC    256X'00'
         ORG   ASPACE+X'40'
         DC    X'01'
         ORG
*
***< Translation table for lowercase >
*
LOWER    DC    256C' '
         ORG   LOWER+C'a'
         DC    CL9'abcdefghi'
         ORG
         ORG   LOWER+C'j'
         DC    CL9'jklmnopqr'
         ORG
         ORG   LOWER+C's'
         DC    CL8'stuvwxyz'
         ORG
         ORG   LOWER+C'A'
         DC    CL9'abcdefghi'
         ORG
         ORG   LOWER+C'J'
         DC    CL9'jklmnopqr'
         ORG
         ORG   LOWER+C'S'
         DC    CL8'stuvwxyz'
         ORG
         ORG   LOWER+C'0'
         DC    CL10'0123456789'
         ORG
*
***< Translation table for uppercase >
*
UPPER    DC    256C' '
         ORG   UPPER+C'a'
         DC    CL9'ABCDEFGHI'
         ORG
         ORG   UPPER+C'j'
         DC    CL9'JKLMNOPQR'
         ORG
         ORG   UPPER+C's'
         DC    CL9'STUVWXYZ'
         ORG
         ORG   UPPER+C'A'
         DC    CL9'ABCDEFGHI'
         ORG
         ORG   UPPER+C'J'
         DC    CL9'JKLMNOPQR'
         ORG
         ORG   UPPER+C'S'
         DC    CL9'STUVWXYZ'
         ORG
         ORG   UPPER+C'0'
         DC    CL10'0123456789'
         ORG
*
***< RESTORE REGISTERS>
*
BSAVE    DS    18F                     Restore those registers.
***************************************************
*
* CSECT: PRINT
*
* REGISTER USAGE:
* R1                                   Not used
* R2                                   Not used
* R3                                   Not used
* R4                                   Not used
* R5                                   Not used
* R6                                   Holds a zero
* R7                                   Contains table address
* R8                                   Contains EOT address
* R9                                   Contains page counter address
* R10                                  Not used
* R11                                  Not used
* R12                                  Linkage register
* R13                                  Linkage register
* R14                                  Linkage register
* R15                                  Linkage register
*
***************************************************
*
***< PRINT SUBROUTINE >
*
PRINT    CSECT
*
***< ENTRY LINKAGE>
*
         STM   14,12,12(13)            Yes, fascinating, here we
         LR    12,15                   see a wild subroutine entry
         USING PRINT,12                linkage in it's natural
         USING BLABL,2                 habitat. It is even using
         LA    14,PSAVE                the DSECT of build labels
         ST    13,4(0,14)              defined before main. This
         ST    14,8(0,13)              will allows me to reference
         LR    13,14                   things more easily. No offsets.
*
***< START LOGIC>
*
         LM    7,9,0(1)                Load parameters into R7-R9
         USING BLABL,7                 Load in our BUILD DSECT labels
         L     6,=F'0'                 Load zero into R6
LOOP     DS    0H                      Loop for iterating over table
         C     7,0(0,8)                See if we are at EOT
         BE    PEND                   If EOT print out header
         C     6,=F'0'                 Compare counter
         BE    HEADOUT
SETUP    DS    0H                      Otherwise setup our print vars
         MVC   PNAME(13),NAME          Move bytes to PNAME for print
         MVC   PSYMBOL(2),SYMBOL       Move bytes to PSYMBOL for print
         MVC   PNUMBER(4),=X'40202020' Setup format for number
         ED    PNUMBER(4),NUMBER       Edit format with number
         MVC   PDATE(7),DATE           Move bytes to PDATE for print
         XPRNT PLINE,65                XPRNT the line of data
         LA    7,25(0,7)               Increment the TABLE address
         S     6,=F'1'                 Decrement item counter
         B     LOOP                    Unconditional GOTO LOOP
HEADOUT  L     6,=F'50'                Reset item counter to fifty
         MVC   65(4,9),=X'40202020'    Set page number format up
         ED    65(4,9),COUNTER         Edit format with actual count
         XPRNT 0(0,9),69               XPRNT the page number out
         XPRNT PHEAD,69                Print out the table header
         AP    COUNTER,=PL1'1'         Increment the page counter
         B     SETUP                   Setup another line to print
*
***< EXIT LINKAGE >
*
PEND     L     13,4(0,13)              The elusive exit linkage.
         LM    14,12,12(13)            Do not disturb it as it is
         BR    14                      sleeping. Anyone read these?
*
***< LTORG FOR PRINT >
*
         LTORG                         Define variables with LTORG
PHEAD    DC    CL37'-Name of Element   Chemical Symbol   '
         DC    CL32'Atomic Number    Date Discovered'
COUNTER  DC    PL2'1'
PLINE    DC    C' '
PNAME    DC    13C' '
         DC    11C' '
PSYMBOL  DC    2C' '
         DC    14C' '
PNUMBER  DC    4C' '
         DC    13C' '
PDATE    DC    7C' '
*
***< RESTORE REGISTERS>
*
PSAVE    DS    18F                     Restore those registers.
***************************************************
*
* CSECT: SORT
*
* REGISTER USAGE:
* R1                                   Not used
* R2                                   Start of the sorting location
* R3                                   UPPER table
* R4                                   LOWER table
* R5                                   Not used
* R6                                   Not used
* R7                                   Pointer to TABLE
* R8                                   Pointer to EOT
* R9                                   Not used
* R10                                  Not used
* R11                                  Not used
* R12                                  Linkage register
* R13                                  Linkage register
* R14                                  Linkage register
* R15                                  Linkage register
*
***************************************************
*
***< SORT SUBROUTINE >
*
SORT     CSECT
*
***< ENTRY LINKAGE>
*
         STM   14,12,12(13)            Yes, fascinating, here we
         LR    12,15                   see a wild subroutine entry
         USING SORT,12                linkage in it's natural
         USING BLABL,2                 habitat. It is even using
         LA    14,SSAVE                the DSECT of build labels
         ST    13,4(0,14)              defined before main. This
         ST    14,8(0,13)              will allows me to reference
         LR    13,14                   things more easily. No offsets.
*
***< START LOGIC>
*
         LM    7,8,0(1)                Load parameters into R7-R8
         LR    2,7
         L     8,0(,8)
         A     8,=F'-50'
FOREACH  DS    0H                      FOREACH item in the table
         CR    2,8                     Compare R2 and R8
         BC    B'1000',SEND            If equal go to save end
         BC    B'0010',SEND            If greater than go to save end
         LA    3,50(0,2)               Otherwise load R2 & R3 with 50D
         LA    4,75(0,2)               and load R4 with R2 75D
IF       DS    0H                      IF lower > upper
         A     3,=F'-25'               Decrement UPPER TABLE address
         A     4,=F'-25'               Decrement LOWER TABLE address
         CLC   7(13,3),7(4)            Compare
         BC    B'0010',BUBBLE          If greater than branch BUBBLE
         LA    2,25(0,2)               Increment start of sorting loca
         BC    B'1111',FOREACH         Unconditionally branch to top
BUBBLE   DS    0H                      BUBBLE and change position of E
         MVC   PLCEHLDR(25),0(3)       Put R3 in PLCEHLDR momentarily
         MVC   0(25,3),0(4)            Put R4 in R3
         MVC   0(25,4),PLCEHLDR        Put PLCEHLDR in R4
         CR    3,7                     See if we are at beginning
         BC    B'1000',FOREACH         If we are start loop again
         BC    B'1111',IF              Otherwise keep checking
*
***< EXIT LINKAGE >
*
SEND     L     13,4(0,13)              The elusive exit linkage.
         LM    14,12,12(13)            Do not disturb it as it is
         BR    14                      sleeping. Anyone read these?
*S
***< LTORG FOR SORT >
*
         LTORG                         Define variables with LTORG
PLCEHLDR DS    25C
*
***< RESTORE REGISTERS>
*
SSAVE    DS    18F                     Restore those registers.
*
***< End the entire program >
*
         END   MAIN
/*
//FT05F001  DD  DSN=KC02314.AUTUMN18.CSCI360.HW7DATA,DISP=SHR
//
